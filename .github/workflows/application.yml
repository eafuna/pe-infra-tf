name: Application deployment

on:
  # idealy this should be prevented by protecting branches on github
  push:
    # branches:
    #   - "main"
    paths:
      - 'application/**'
      - '.github/workflows/application.yml'

  # pull_request:
  #   branches:
  #     - "main"
  #   paths:
  #     - 'application/**'
  #     - '.github/workflows/application.yml'

  workflow_dispatch:
   
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    

      - name: test-az-cli
        run: |
          az acr credential show --name developmentdemoacr | jq '.passwords[0].value'

  application-deployment-simplified:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: 'application'
          sparse-checkout-cone-mode: false
          
      - name: 'Azure docker login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
             
      # - name: 'Build and push image'    
      #   run: |
      #     cd application
      #     ls
      #     docker build . -t serverapp:${{ github.sha }}
      #     docker tag serverapp:${{ github.sha }} developmentdemoacr.azurecr.io/serverapp:${{ github.sha }}
      #     docker push developmentdemoacr.azurecr.io/serverapp:${{ github.sha }}
      #     docker tag serverapp:${{ github.sha }} developmentdemoacr.azurecr.io/serverapp:latest
      #     docker push developmentdemoacr.azurecr.io/serverapp:latest
      #     az acr list

      # - name: 'Build and push image'
      #   uses: azure/docker-login@v1
      # - run: |
      #       docker build . -t developmentdemoacr.azurecr.io/serverapp:${{ github.sha }}